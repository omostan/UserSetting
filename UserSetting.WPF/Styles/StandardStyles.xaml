<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    mc:Ignorable="d">

    <!--#region FontSizes-->
    <sys:Double x:Key="DefaultFontSize">13</sys:Double>
    <sys:Double x:Key="BusyIndicatorFontSize">12</sys:Double>
    <sys:Double x:Key="NewComponentHeaderFontSize">18</sys:Double>
    <sys:Double x:Key="MessagesFontSize">12</sys:Double>
    <sys:Double x:Key="FilterTextFontSize">20</sys:Double>
    <sys:Double x:Key="VersionInfoHeaderFontSize">22</sys:Double>
    <sys:Double x:Key="OrderMessageFontSize">18</sys:Double>
    <sys:Double x:Key="PageHeaderFontSize">22</sys:Double>
    <!--#endregion-->

    <!--#region BusyIndicator Size-->
    <sys:Double x:Key="IndicatorScaleX">2</sys:Double>
    <sys:Double x:Key="IndicatorScaleY">2</sys:Double>
    <!--#endregion-->

    <Style x:Key="ErrorMessage" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Red" />
        <Setter Property="Margin" Value="10,0,0,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <!--#region RowHeight-->
    <sys:Double x:Key="RowHeight">30</sys:Double>
    <!--#endregion-->

    <!--#region  PageHeader-->
    <Style x:Key="PageHeader" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{StaticResource ResourceKey=PageHeaderFontSize}" />
    </Style>
    <!--#endregion-->

    <!--#region  VersionInfoHeader-->
    <Style x:Key="VersionInfoHeader" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{StaticResource ResourceKey=VersionInfoHeaderFontSize}" />
    </Style>
    <!--#endregion-->

    <!--#region  VersionInfoTextBlock-->
    <Style x:Key="VersionInfoTextBlock" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{StaticResource ResourceKey=VersionInfoHeaderFontSize}" />
    </Style>
    <!--#endregion-->

    <!--#region  VersionInfoTextBox-->
    <Style x:Key="VersionInfoTextBox" TargetType="TextBox">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="FontSize" Value="{StaticResource ResourceKey=VersionInfoHeaderFontSize}" />
    </Style>
    <!--#endregion-->

    <!--#region  ReadOnlyMessageBox-->
    <Style x:Key="ReadOnlyMessageBox" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource ResourceKey=TextBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=TextForeground}" />
        <Setter Property="FontSize" Value="{StaticResource ResourceKey=DefaultFontSize}" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>
    <!--#endregion-->

    <!--#region  ReadWriteMessageBox-->
    <Style x:Key="ReadWriteMessageBox" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource ResourceKey=TextBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=TextForeground}" />
        <Setter Property="FontSize" Value="{StaticResource ResourceKey=DefaultFontSize}" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="AcceptsReturn" Value="True" />
    </Style>
    <!--#endregion-->

    <!--#region  ReadWriteOrderMessage-->
    <Style x:Key="ReadWriteOrderMessage" TargetType="TextBox">
        <Setter Property="FontSize" Value="{StaticResource ResourceKey=OrderMessageFontSize}" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Height" Value="30" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="AcceptsReturn" Value="False" />
    </Style>
    <!--#endregion-->

    <!--#region  ComboBoxStyle-->
    <Style x:Key="ComboBoxStyle" TargetType="{x:Type TypeName=ComboBox}">
        <Setter Property="Background" Value="{DynamicResource ResourceKey=GroupBoxPrimary}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=LanguageForegroundColor}" />
        <Setter Property="FontSize" Value="{StaticResource ResourceKey=DefaultFontSize}" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="IsDropDownOpen" Value="True">
                <Setter Property="Background" Value="{DynamicResource ResourceKey=GroupByBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey=GroupByForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region  DropDownStyle-->
    <Style x:Key="DropDownStyle" TargetType="{x:Type TypeName=StackPanel}">
        <Setter Property="Cursor" Value="Hand" />
    </Style>
    <!--#endregion-->

    <!--#region  OrderDataView-->
    <Style x:Key="OrderDataViewStyle" TargetType="DataGrid">
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="GridLinesVisibility" Value="All" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="IsManipulationEnabled" Value="False" />
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="CanUserResizeColumns" Value="True" />
        <Setter Property="CanUserSortColumns" Value="True" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
        <Setter Property="Background" Value="{DynamicResource ResourceKey=TextBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=TextForeground}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource ResourceKey=BorderPrimary}" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource ResourceKey=BorderPrimary}" />
    </Style>
    <!--#endregion-->

    <!--#region  OrderDetailView-->
    <Style x:Key="OrderDetailViewStyle" TargetType="DataGrid">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="{StaticResource ResourceKey=DefaultFontSize}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource ResourceKey=BorderPrimary}" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource ResourceKey=BorderPrimary}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=BorderPrimary}" />
    </Style>
    <!--#endregion-->

    <!--#region  DataGridColumnHeader-->
    <Style x:Key="DataGridColumnHeader" TargetType="DataGridColumnHeader">
        <Setter Property="FontSize" Value="{StaticResource ResourceKey=DefaultFontSize}" />
        <Setter Property="Background" Value="{DynamicResource ResourceKey=TextBackground}" />
        <Setter Property="BorderThickness" Value="0,0,1,0" />
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=BorderPrimary}" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>
    <!--#endregion-->

    <!--#region  DataTemplateTextBlock-->
    <Style x:Key="DataTemplateTextBlock" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{StaticResource ResourceKey=DefaultFontSize}" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Margin" Value="10,0,0,0" />
    </Style>
    <!--#endregion-->

    <!--#region  DataGridCellTemplateTextBlock-->
    <Style x:Key="DataGridCellTemplateTextBlock" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="5,0,0,0" />
    </Style>
    <!--#endregion-->

    <!--#region  DataGridCellTemplateTextBox-->
    <Style x:Key="DataGridCellTemplateTextBox" TargetType="TextBox">
        <Setter Property="FontSize" Value="{StaticResource ResourceKey=DefaultFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=TextForeground}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Height" Value="{StaticResource ResourceKey=RowHeight}" />
    </Style>
    <!--#endregion-->

    <!--#region  DataGridCellStretch-->
    <Style x:Key="DataGridCellStretch" TargetType="DataGridCell">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>
    <!--#endregion-->

    <!--#region  WrapText-->
    <Style x:Key="WrapText" TargetType="{x:Type TypeName=TextBlock}">
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <!--#endregion-->

    <!--#region StandardGridSplitter-->
    <Style x:Key="StandardGridSplitter" TargetType="GridSplitter">
        <Setter Property="Panel.ZIndex" Value="2" />
        <Setter Property="BorderThickness" Value="1,0" />
        <Setter Property="RenderTransformOrigin" Value="-1.2,0.507" />
        <Setter Property="ResizeBehavior" Value="PreviousAndNext" />
        <Setter Property="Background" Value="{DynamicResource ResourceKey=BorderPrimary}" />
    </Style>
    <!--#endregion-->

    <!--#region VerticalGridSplitter-->
    <Style
        x:Key="VerticalGridSplitter"
        BasedOn="{StaticResource ResourceKey=StandardGridSplitter}"
        TargetType="GridSplitter">
        <Setter Property="Width" Value="5" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="ResizeDirection" Value="Columns" />
    </Style>
    <!--#endregion-->

    <!--#region HorizontalGridSplitter-->
    <Style
        x:Key="HorizontalGridSplitter"
        BasedOn="{StaticResource ResourceKey=StandardGridSplitter}"
        TargetType="GridSplitter">
        <Setter Property="Height" Value="3" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="ResizeDirection" Value="Rows" />
    </Style>
    <!--#endregion-->

    <!--#region CircleCheckbox-->
    <Style x:Key="CircleCheckbox" TargetType="CheckBox">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="50,5,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TypeName=CheckBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="17" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="17" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            BorderBrush="{DynamicResource ResourceKey=ThemeToggleButtonBackgroundColor}"
                            BorderThickness="1"
                            CornerRadius="2">
                            <Grid>
                                <TextBlock
                                    x:Name="CheckBoxContent"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Background="{DynamicResource ResourceKey=ThemeToggleButtonBackgroundColor}"
                                    FontSize="{StaticResource ResourceKey=DefaultFontSize}"
                                    Foreground="{DynamicResource ResourceKey=TextForeground}" />
                            </Grid>
                        </Border>
                        <ContentPresenter
                            x:Name="content"
                            Grid.Column="1"
                            Margin="5,0,0,0"
                            HorizontalAlignment="Left" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckBoxContent" Property="Background" Value="{DynamicResource ResourceKey=TextBackground}" />
                            <Setter TargetName="CheckBoxContent" Property="Foreground" Value="{DynamicResource ResourceKey=TextForeground}" />
                            <Setter TargetName="CheckBoxContent" Property="Padding" Value="5" />
                            <Setter TargetName="CheckBoxContent" Property="Text" Value="X" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckBoxContent" Property="Background" Value="Transparent" />
                            <Setter TargetName="CheckBoxContent" Property="Text" Value="" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion CheckboxStyles-->

    <!--#region  CheckBoxTextBlock-->
    <Style x:Key="CheckBoxTextBlock" TargetType="{x:Type TypeName=TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{StaticResource ResourceKey=DefaultFontSize}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=TextForeground}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
    </Style>
    <!--#endregion-->

    <!--#region  DisplayTextBlock-->
    <Style
        x:Key="DisplayTextBlock"
        BasedOn="{StaticResource ResourceKey=CheckBoxTextBlock}"
        TargetType="{x:Type TypeName=TextBlock}">
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Margin" Value="20,0,0,0" />
    </Style>
    <!--#endregion-->

    <!--#region  DisplayTextBox-->
    <Style x:Key="DatePickerTextBoxStyle" TargetType="{x:Type TypeName=Control}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="30" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=TextForeground}" />
    </Style>
    <Style TargetType="{x:Type TypeName=DatePickerTextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <TextBox
                        x:Name="PART_TextBox"
                        VerticalContentAlignment="Center"
                        Style="{StaticResource ResourceKey=DatePickerTextBoxStyle}"
                        Text="{Binding Path=SelectedDate, StringFormat='dd.MM.yyyy', RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Not Implemented-->

    <!--<Style x:Key="GridColumnHeaderStyle" TargetType="StackPanel">
        <Setter Property="Background" Value="{DynamicResource ResourceKey=TextBackground}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>-->

    <!--<Style x:Key="EntityButtonStyles" TargetType="Button">
        <Setter Property="Padding" Value="0,10,0,10" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
    </Style>-->

    <!--<Style x:Key="RequiredFieldErrorMessage" TargetType="TextBox">
        <Setter Property="Padding" Value="2,1" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <AdornedElementPlaceholder />
                        <ItemsControl
                            Margin="0,5,0,0"
                            FontSize="12"
                            ItemsSource="{Binding}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock
                                        d:DataContext="{d:DesignData}"
                                        Foreground="Red"
                                        Text="{Binding ErrorContent}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <StackPanel>
                        <Border
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<Style x:Key="DataGridOrderCellStretch" TargetType="DataGridCell">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>-->

    <!--<Style x:Key="DataGridCellCenter" TargetType="DataGridCell">
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>-->

    <!--<Style x:Key="DataGridTextColumnEmpty" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="#85AD86" />
    </Style>-->

    <!--<Style x:Key="DataGrid" TargetType="DataGrid">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalGridLinesBrush" Value="Transparent" />
        <Setter Property="VerticalGridLinesBrush" Value="Transparent" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0,1,0,0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource BorderPrimary}" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource BorderPrimary}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderPrimary}" />
    </Style>-->

    <!--<Style x:Key="ListView" TargetType="ListView">
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True" />
        <Setter Property="GridView.AllowsColumnReorder" Value="True" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SelectedItemHighlightBackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource SelectedItemHighlightForegroundColor}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="False">
                <Setter Property="Background" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <!--<Style x:Key="TableHeader" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="{StaticResource ResourceKey=TableHeaderSize18}" />
    </Style>-->

    <!--<Style x:Key="ReadOnlyVersionInfoUpdate" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource ResourceKey=VersionInfoSize18}" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Height" Value="30" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>-->

    <!--<Style x:Key="ReadWriteVersionInfoUpdate" TargetType="TextBox">
        <Setter Property="FontSize" Value="{StaticResource ResourceKey=VersionInfoSize18}" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Height" Value="30" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="AcceptsReturn" Value="False" />
    </Style>-->

    <!--<Style x:Key="ComboBoxLabel" TargetType="Label">
        <Setter Property="FontSize" Value="{StaticResource ResourceKey=TableHeaderSize18}" />
        ~1~<Setter Property="FontWeight" Value="Bold" />@1@
    </Style>-->

    <!--<Style x:Key="GridViewTemplateColumnHeader" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="FontSize" Value="{StaticResource ResourceKey=DefaultFontSize}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontWeight" Value="DemiBold" />
    </Style>-->

    <!--#region Search Button Ref: https://stackoverflow.com/a/71367424/5352166-->
    <!--<Style
        x:Key="SearchButton"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Tag" Value="{StaticResource SearchIcon}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            ~1~#region Search Icon@1@
                            <Border
                                Grid.Column="0"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center">
                                <Button
                                    Name="icon"
                                    Background="{TemplateBinding Background}"
                                    Command="{TemplateBinding Command}"
                                    CommandParameter="{Binding Text, ElementName=text}"
                                    Content="{TemplateBinding Tag}"
                                    FontSize="{TemplateBinding FontSize}"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsDefault="True"
                                    Style="{StaticResource IconButton}" />
                            </Border>
                            ~1~#endregion@1@

                            ~1~#region Text Box@1@
                            <Border Grid.Column="1" Margin="5">
                                <TextBox
                                    Name="text"
                                    VerticalAlignment="Center"
                                    HorizontalContentAlignment="Left"
                                    VerticalContentAlignment="Center"
                                    ClipToBounds="True"
                                    FontSize="{TemplateBinding FontSize}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Style="{StaticResource TextBoxWithPlaceHolder}"
                                    Tag="{TemplateBinding Content}"
                                    TextWrapping="NoWrap">
                                    <TextBox.InputBindings>
                                        <KeyBinding
                                            Key="Enter"
                                            Command="{TemplateBinding Command}"
                                            CommandParameter="{Binding Text, ElementName=text}" />
                                    </TextBox.InputBindings>
                                </TextBox>
                            </Border>
                            ~1~#endregion@1@

                            ~1~#region Close Icon@1@
                            <Button
                                Name="close"
                                Grid.Column="2"
                                Margin="5"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                IsCancel="True"
                                Style="{StaticResource CloseButtonStyle}">
                                <TextBlock FontFamily="{StaticResource IconSolid}" Text="{StaticResource CloseIcon}" />
                            </Button>
                            ~1~#endregion@1@

                        </Grid>
                    </Border>

                    ~1~#region Triggers@1@
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Text, ElementName=text}" Value="">
                            <Setter TargetName="icon" Property="IsEnabled" Value="False" />
                            <Setter TargetName="close" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <Trigger SourceName="close" Property="IsPressed" Value="True">
                            <Setter TargetName="text" Property="Text" Value="" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    ~1~#endregion@1@

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <!--#endregion-->

    <!--#endregion-->

</ResourceDictionary>