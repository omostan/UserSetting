<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--#region  DefaultStyle-->
    <Style x:Key="DefaultStyle" TargetType="Button">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Width" Value="110" />
        <Setter Property="Padding" Value="20,8" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Margin="{TemplateBinding Margin}"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="3">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region  StanButtonStyle-->
    <Style x:Key="StanButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontFamily" Value="Webdings" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Width" Value="40" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>
    <!--#endregion-->

    <!--#region  PrimaryButton #2A3D82 /-->
    <Style x:Key="PrimaryButton" TargetType="Button">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{DynamicResource UnSelectedSubPositionButtonBackgroundColor}" />
        <Setter Property="Width" Value="110" />
        <Setter Property="Padding" Value="20,8" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Margin="{TemplateBinding Margin}"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="3">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryButtonMouseOver}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region  minizeButton-->
    <Style
        x:Key="MinimizedButtonStyle"
        BasedOn="{StaticResource StanButtonStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="{DynamicResource DefaultBackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource MinimizeButtonForegroundColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter>
                            <ContentPresenter.Content>
                                <TextBlock
                                    Padding="0,0,0,10"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" />
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MinimizeButtonMouseOverBackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource MouseOverForegroundColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region  maximizeButton-->
    <Style
        x:Key="MaximizedButtonStyle"
        BasedOn="{StaticResource StanButtonStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="{DynamicResource DefaultBackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource MaximizeButtonForegroundColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MaximizeButtonMouseOverBackgroundColor}" />
                <Setter Property="Foreground" Value="{DynamicResource MouseOverForegroundColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region  CloseButtonStyle-->
    <Style
        x:Key="CloseButtonStyle"
        BasedOn="{StaticResource StanButtonStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="{DynamicResource DefaultBackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource RedColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource RedColor}" />
                <Setter Property="Foreground" Value="{DynamicResource MouseOverForegroundColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region  VersionInfoUpdateButton-->
    <Style
        x:Key="VersionInfoUpdateButton"
        BasedOn="{StaticResource ResourceKey=PrimaryButton}"
        TargetType="Button" />
    <!--#endregion-->

</ResourceDictionary>